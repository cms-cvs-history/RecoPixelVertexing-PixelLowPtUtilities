process PRODUCETRACKS =
{
  # Fake conditions
  include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"

  # Logger
  service = MessageLogger
  {
    untracked vstring destinations = { "cerr" }
    untracked PSet cerr =
    {
      untracked string threshold = "ERROR"
    } 
    untracked vstring debugModules = { }
  }

  ##################################################################################
  # Source
  source = PoolSource
  { 
    # Minimum bias
#   include "RecoPixelVertexing/PixelLowPtUtilities/test/sourceRecHits_pp_castor.cfi"
    include "RecoPixelVertexing/PixelLowPtUtilities/test/sourceRecHits_pp_kfki.cfi"
    untracked uint32 skipEvents = 0
  }
  untracked PSet maxEvents = { untracked int32 input = 200 }

  ##################################################################################
  # Pixel tracks
  include "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cff"

  # Pixel triplet tracks
  module  pixelProtoTracks = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelProtoTracks.passLabel = "Pixel triplet tracks for vertexing" 

  # Pixel triplet vertices
  include "RecoPixelVertexing/PixelVertexFinding/data/PixelVertexes.cff"
  replace pixelVertices.TrackCollection = pixelProtoTracks
  replace pixelVertices.ZSeparation = 0.3 // [cm]
  replace pixelVertices.NTrkMin     = 3 
  replace pixelVertices.PtMin       = 0   // [GeV/c]

  # Pixel triplet tracks with vertices
  module  pixelPrimTracks = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelPrimTracks.passLabel = "Pixel triplet primary tracks" 
  replace pixelPrimTracks.RegionFactoryPSet.RegionPSet.useFoundVertices = true
  replace pixelPrimTracks.RegionFactoryPSet.RegionPSet.originHalfLength = 0.2 // [cm]

  # Hit remover
  include "RecoPixelVertexing/PixelLowPtUtilities/data/SiPixelFreeRecHits.cff"

  # Pixel triplet tracks, secondaries  
  module  pixelSecoTracks = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelSecoTracks.passLabel = "Pixel triplet secondary tracks" 
  replace pixelSecoTracks.RegionFactoryPSet.RegionPSet.originRadius = 3.5 // [cm]
  replace pixelSecoTracks.OrderedHitsFactoryPSet.SeedingLayers = "PixelLayerTripletsModified"

  include "RecoPixelVertexing/PixelLowPtUtilities/data/PixelTrackSeeds.cff"

  ##################################################################################
  # Pixel seeds
  module primSeeds = pixelTrackSeeds from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelTrackSeeds.cfi" 
  replace primSeeds.tripletList = { "pixelPrimTracks" }

  # Secondary seeds
  module secoSeeds = pixelTrackSeeds from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelTrackSeeds.cfi" 
  replace secoSeeds.tripletList = { "pixelSecoTracks" }

  ##################################################################################
  # Candidate maker, final fit
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

  replace CkfTrajectoryBuilder.ptCut                = 0.075 // [GeV/c]
  replace CkfTrajectoryBuilder.maxCand              = 5
  replace CkfTrajectoryBuilder.maxLostHit           = 1
  replace CkfTrajectoryBuilder.maxConsecLostHit     = 1
  replace CkfTrajectoryBuilder.minimumNumberOfHits  = 3
  replace CkfTrajectoryBuilder.intermediateCleaning = false
  replace CkfTrajectoryBuilder.alwaysUseInvalidHits = false

  replace CkfTrajectoryBuilder.clusterShapeMode = 0

  replace MaterialPropagator.Mass         = 0.139
  replace OppositeMaterialPropagator.Mass = 0.139
  
  # Primaries
  module  primTrackCandidates = ckfTrackCandidates from
    "RecoTracker/CkfPattern/data/CkfTrackCandidates.cfi"
  replace primTrackCandidates.SeedProducer = "primSeeds"
  replace primTrackCandidates.RedundantSeedCleaner = "none"
  
  module  globalPrimTracks = ctfWithMaterialTracks from
    "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cfi"
  replace globalPrimTracks.src = "primTrackCandidates"
  replace globalPrimTracks.TrajectoryInEvent = true

  # Secondaries
  module  secoTrackCandidates = ckfTrackCandidates from
    "RecoTracker/CkfPattern/data/CkfTrackCandidates.cfi"
  replace secoTrackCandidates.SeedProducer = "secoSeeds"
  replace secoTrackCandidates.RedundantSeedCleaner = "none"

  module  globalSecoTracks = ctfWithMaterialTracks from
    "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cfi"
  replace globalSecoTracks.src = "secoTrackCandidates"
  replace globalSecoTracks.TrajectoryInEvent = true

  # V0 reconstruction
  include "RecoVZero/VZeroFinding/data/VZeros.cff"
  replace pixelVZeros.minImpactPositiveDaughter = 0.2 // [cm]
  replace pixelVZeros.minImpactNegativeDaughter = 0.2 // [cm]

  ##################################################################################
  # Test
  include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"
  replace TrackAssociatorByHitsESProducer.MinHitFraction = 0.0
  es_module = GlobalTrackingGeometryESProducer { }
  es_module = TransientTrackBuilderESProducer
  {
    string ComponentName = "TransientTrackBuilder"
  }

  module testPixelTracks = LowPtTrackAnalyzer
  {
    string trackCollection = "pixelPrimTracks"
    string resultFile      = "resultPixelTracks_pp_1.root"
    bool plotEvent = false
    bool zipFiles  = true
  }

  module testGlobalTracks = LowPtTrackAnalyzer
  {
    string trackCollection = "globalPrimTracks"
    string resultFile      = "resultGlobalTracks_pp_1.root"
    bool plotEvent = true
    bool zipFiles  = true
  }

  module multiplicity = ChargedMultiplicityAnalyzer
  {
  }

  ##################################################################################
  # Path
  path p =
  {
    pixelProtoTracks,
    #
    pixelVertices,                   pixelPrimTracks,
    pixelFreeHits,                   pixelSecoTracks,
    #
    primSeeds, primTrackCandidates, globalPrimTracks
#   secoSeeds, secoTrackCandidates, globalSecoTracks,
    #
#   pixelVZeros,
    #
#   multiplicity,
    #
#   testPixelTracks, testGlobalTracks
  }
}

