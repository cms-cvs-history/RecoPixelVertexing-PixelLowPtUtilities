process TEST =
{
  # Fake conditions
  include "CalibTracker/Configuration/data/SiStrip_FakeLorentzAngle.cff"

  # Logger
  service = MessageLogger
  {
#   untracked vstring destinations = { "cerr" }
#   untracked PSet cerr =
#   {
#     untracked string threshold = "ERROR"
#   } 
#   untracked vstring debugModules =  { }
  }

  # Source
  source = PoolSource
  { 
    include "RecoPixelVertexing/PixelLowPtUtilities/test/sourceRecHits_pp.cfi"
#   untracked vstring fileNames =
#   { 'file:/afs/kfki.hu/scratch/sikler/cmssw/pp160pre6/recHits.root' }
#   untracked uint32 skipEvents = 0
  }
  untracked PSet maxEvents = { untracked int32 input = 1000 }

  # Pixel tracks
  include "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cff"

  # Pixel triplet tracks
  module  pixelTracks = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelTracks.passLabel = "Pixel triplet tracks" 

  # Pixel triplet vertices
  include "RecoPixelVertexing/PixelVertexFinding/data/PixelVertexes.cff"
  replace pixelVertices.TrackCollection = pixelTracks
  replace pixelVertices.ZSeparation = 0.3 // [cm]
  replace pixelVertices.NTrkMin     = 3 
  replace pixelVertices.PtMin       = 0   // [GeV/c]

  # Pixel triplet tracks with vertices
  module  pixelTracksWithVertices = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelTracksWithVertices.passLabel = "Pixel triplet tracks with vertices" 
  replace pixelTracksWithVertices.RegionFactoryPSet.RegionPSet.useFoundVertices = true
  replace pixelTracksWithVertices.RegionFactoryPSet.RegionPSet.originHalfLength = 0.2 // [cm]

  # Hit remover
  include "RecoPixelVertexing/PixelLowPtUtilities/data/SiPixelFreeRecHits.cff"
  
  # Pixel triplet tracks, secondaries  
  module  pixelTracksSecondaries = pixelLowPtTracksWithZPos from
    "RecoPixelVertexing/PixelLowPtUtilities/data/PixelLowPtTracksWithZPos.cfi"
  replace pixelTracksSecondaries.passLabel = "Pixel triplet tracks, secondaries" 
  replace pixelTracksSecondaries.RegionFactoryPSet.RegionPSet.originRadius      = 3.5 // [cm]
  replace pixelTracksSecondaries.OrderedHitsFactoryPSet.SeedingLayers = "PixelLayerTripletsModified"

  # Pixel triplet seeds
  include "RecoPixelVertexing/PixelLowPtUtilities/data/PixelTrackSeeds.cff"
  replace pixelTrackSeeds.tripletList = { "pixelTracksWithVertices", "pixelTracksSecondaries" }

  # Pixel doublet seeds

  # Global tracks
  include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  replace CkfTrajectoryBuilder.ptCut                = 0.075 // [GeV/c]
  replace CkfTrajectoryBuilder.maxCand              = 5
  replace CkfTrajectoryBuilder.maxLostHit           = 1
  replace CkfTrajectoryBuilder.maxConsecLostHit     = 1
  replace CkfTrajectoryBuilder.minimumNumberOfHits  = 3
  replace CkfTrajectoryBuilder.intermediateCleaning = false
  replace CkfTrajectoryBuilder.alwaysUseInvalidHits = false

  module ckfTripletTrackCandidates = ckfTrackCandidates from
    "RecoTracker/CkfPattern/data/CkfTrackCandidates.cfi"
  replace ckfTripletTrackCandidates.SeedProducer = "pixelTrackSeeds"

  # Final fit
  include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"
  module ctfTripletTracks = ctfWithMaterialTracks from
    "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cfi"
  replace ctfTripletTracks.src = "ckfTripletTrackCandidates"
  replace ctfTripletTracks.TrajectoryInEvent = true

  # Refit with momentum constraint

  # V0
  include "RecoVZero/VZeroFinding/data/VZeros.cff"
  replace pixelVZeros.minImpactPositiveDaughter = 0.2 // [cm]
  replace pixelVZeros.minImpactNegativeDaughter = 0.2 // [cm]

  # Tracking truth
  include "SimGeneral/TrackingAnalysis/data/trackingParticles.cfi"
  include "SimTracker/TrackAssociation/data/TrackAssociatorByHits.cfi"
  replace TrackAssociatorByHitsESProducer.MinHitFraction = 0.0

  # Test
  es_module = GlobalTrackingGeometryESProducer { }
  es_module = TransientTrackBuilderESProducer
  {
    string ComponentName = "TransientTrackBuilder"
  }

  module test = LowPtTrackAnalyzer
  {
    bool plotEvent = false
    bool zipFiles  = true
  }

  # Path
  path p =
  {
    pixelTracks,
    pixelVertices,
    pixelTracksWithVertices,
    siPixelFreeRecHits,
    pixelTracksSecondaries,
    pixelTrackSeeds,
    ckfTripletTrackCandidates,
    ctfTripletTracks,
    pixelVZeros,
    trackingParticles,
    test 
  }
}

